@model GestionAirPort.Models.Ticket

@{
    ViewData["Title"] = "Créer un Ticket";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1>@ViewData["Title"]</h1>
    </div>

    <div class="card">
        <div class="card-body text-dark">
            <form asp-action="Create" id="createTicketForm">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="FlightFk" class="control-label"></label>
                            <select asp-for="FlightFk" class="form-select" asp-items="ViewBag.FlightFk">
                                <option value="">-- Sélectionner un vol --</option>
                            </select>
                            <span asp-validation-for="FlightFk" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="PassengerFk" class="control-label"></label>
                            <select asp-for="PassengerFk" class="form-select" asp-items="ViewBag.PassengerFk">
                                <option value="">-- Sélectionner un passager --</option>
                            </select>
                            <span asp-validation-for="PassengerFk" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="Prix" class="control-label"></label>
                            <div class="input-group">
                                <span class="input-group-text">€</span>
                                <input asp-for="Prix" class="form-control" type="number" step="0.01" min="0" max="10000" />
                            </div>
                            <span asp-validation-for="Prix" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Siege" class="control-label"></label>
                            <input asp-for="Siege" class="form-control" />
                            <span asp-validation-for="Siege" class="text-danger"></span>
                            <div id="seatAvailability" class="mt-1"></div>
                        </div>

                        <div class="form-check mb-3">
                            <input asp-for="VIP" class="form-check-input" type="checkbox" />
                            <label asp-for="VIP" class="form-check-label"></label>
                        </div>
                    </div>
                </div>

                <div id="flightDetails" class="alert alert-info d-none mb-3">
                    <!-- Les détails du vol seront affichés ici -->
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Créer
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Retour
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            // Fonction pour mettre à jour les détails du vol
            function updateFlightDetails() {
                var flightId = $('#FlightFk').val();
                if (flightId) {
                    $.get('/Tickets/GetFlightDetails/' + flightId, function (data) {
                        $('#flightDetails').removeClass('d-none').html(`
                            <h5>Détails du Vol</h5>
                            <p>
                                <strong>Départ:</strong> ${data.departure}<br>
                                <strong>Destination:</strong> ${data.destination}<br>
                                <strong>Date:</strong> ${data.flightDate}<br>
                                <strong>Places disponibles:</strong> ${data.availableSeats}/${data.planeCapacity}
                            </p>
                        `);
                    });
                } else {
                    $('#flightDetails').addClass('d-none');
                }
            }

            // Fonction pour vérifier la disponibilité du siège
            function checkSeatAvailability() {
                var flightId = $('#FlightFk').val();
                var seat = $('#Siege').val();
                if (flightId && seat) {
                    $.get('/Tickets/CheckSeatAvailability', { flightId: flightId, seat: seat }, function (data) {
                        var badge = data.isAvailable ?
                            '<span class="badge bg-success">Siège disponible</span>' :
                            '<span class="badge bg-danger">Siège déjà occupé</span>';
                        $('#seatAvailability').html(badge);
                    });
                }
            }

            // Gestionnaires d'événements
            $('#FlightFk').change(updateFlightDetails);
            $('#Siege').change(checkSeatAvailability);
            $('#FlightFk').change(function() {
                if ($('#Siege').val()) {
                    checkSeatAvailability();
                }
            });

            // Calcul du prix VIP
            $('#VIP').change(function() {
                var basePrice = parseFloat($('#Prix').val()) || 0;
                if (this.checked) {
                    $('#Prix').val((basePrice * 1.5).toFixed(2));
                } else {
                    $('#Prix').val((basePrice / 1.5).toFixed(2));
                }
            });
        });
    </script>
}