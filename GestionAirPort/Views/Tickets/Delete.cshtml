@model GestionAirPort.Models.Ticket

@{
    ViewData["Title"] = "Supprimer le Ticket";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1>@ViewData["Title"]</h1>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="alert alert-danger">
                <h4><i class="fas fa-exclamation-triangle"></i> Confirmation de suppression</h4>
                <p>Êtes-vous sûr de vouloir supprimer ce ticket ?</p>
            </div>

            <div class="card mb-3">
                <div class="card-header">
                    <h5>Détails du ticket</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.TicketInfo)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.TicketInfo)</dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Prix)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.FormattedPrice)</dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Passenger)</dt>
                        <dd class="col-sm-9">
                            @if (Model.Passenger != null)
                            {
                                @($"{Model.Passenger.FullName.LastName} {Model.Passenger.FullName.FirstName}")
                            }
                        </dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Flight)</dt>
                        <dd class="col-sm-9">
                            @if (Model.Flight != null)
                            {
                                @($"Vol {Model.Flight.FlightId} - {Model.Flight.Departure} → {Model.Flight.Destination}")
                                <br />
                                <small class="text-muted">Date: @Model.Flight.FlightDate.ToString("dd/MM/yyyy HH:mm")</small>
                            }
                        </dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Status)</dt>
                        <dd class="col-sm-9">
                            <span class="badge @(Model.Status == TicketStatus.Active ? "bg-success" :
                                              Model.Status == TicketStatus.Cancelled ? "bg-danger" : "bg-secondary")">
                                @Html.DisplayFor(model => model.Status)
                            </span>
                        </dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.CreatedAt)</dt>
                        <dd class="col-sm-9">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</dd>

                        @if (Model.UpdatedAt.HasValue)
                        {
                            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.UpdatedAt)</dt>
                            <dd class="col-sm-9">@Model.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</dd>
                        }
                    </dl>
                </div>
            </div>

            <form asp-action="Delete" class="mt-3">
                <input type="hidden" asp-for="TicketId" />
                <button type="submit" class="btn btn-danger">
                    <i class="fas fa-trash"></i> Confirmer la suppression
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Retour
                </a>
            </form>
        </div>
    </div>
</div>